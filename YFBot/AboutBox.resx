<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMIOAADCDgAAAAAAAAAA
        AAC0saz/sa+s/6eajf+YeFL/i3Rb/4+Tpf+QmrT/oKS4/9DKy//Wz8z/2NHL/9rSy//b083/29XO/9vV
        zv/d18//39nS/97Z0v/e19D/3tfQ/9/Z0//g2dT/2dHN/6ytuf+Kk6z/iZKs/4iRq/+IkKv/ipKq/5ie
        rP+xsrH/s7Gt2ri2sv+yr6n/on9Y/5JmNf+ndTf/kImM/5miu/+jqb7/xcPJ/9XQzP/W0cz/2dLM/9vU
        zf/b1c7/3dbP/9/Z0v/f2dL/4NnR/+HZ0P/g2ND/4NjS/+DY0//Kxcj/mJ60/4+Ysv+OmLL/jZex/4+Y
        sf+RmrH/nKO0/66wtP+3tbHavbq2/7Krof+meUT/l2gy/7F9Pv+im5r/pKzD/6qyx//Aws3/1tHP/9rU
        0P/b1dD/3NbQ/9zWz//e19D/4NnS/9/Z0v/g2tL/4drS/+DZ0f/h2tL/3tbR/7q6xP+Wnrf/nqa7/5+e
        qf+ok4H/k39t/6eMcv+1srP/s7S2/7KysNq/vLjuvru1/6qPcf+yhlH/tJyD/7m6wP+pssb/rbfL/73B
        z//X09L/3dfS/97X0f/d2NL/3dfR/97X0f/f2dL/39rT/+Ha0//i29T/4tvT/+Ha0//c1dH/tLXC/5ui
        uv+sscD/rJ+T/7N7N/+CWCn/sn9D/8C3rf+8u7z/sLCv2MC9uqjJxsH/ysa//8nDu//QzMj/t73K/623
        y/+zu8//v8PS/9fU1P/f2tP/4NrT/+Da0//f2dL/39nT/+Da1P/g29T/4tzV/+Pd1v/j3db/4tzV/9zX
        0/+4ucb/oqjA/6uxw/+9ubf/s49k/7+HP/+3lWv/ysW//8C+vf+xsK62u7u7RsPCwu7Tzsj/1tHM/8TG
        zP+zvM3/tL3P/7rB0v/BxNL/2NPT/+Lb1f/i3NX/4tvU/+Ha0//g2tP/4dvV/+Lc1v/j3db/5d7X/+Te
        1//j3db/39nU/7u8x/+hqMH/pq3D/8LDyf/Iw7z/vrOm/8nEvP/V0cr/wL68/7Oxraq3uLgUubu+zL7A
        x/+9wcz/tb3O/7fA0P+6wtL/vsTS/8rK0v/c19T/5N3V/+Pd1f/i3NX/4tvU/+Lb1P/i3NX/4t3W/+Te
        1//l39j/5N/Y/+Xg2f/i3df/x8nN/6y2yP+qtMn/uL7M/9fU0v/a19H/2NTP/8/My/+7u7v9tbOvgMC6
        rwO9u7uhvL7D/7i/zP+5wdD/u8PR/77E0f/Fx9D/1NHQ/93Y0//h29T/4tzU/+Hb1P/h29X/49zW/+Pd
        1//l39j/5eDY/+bg2P/n4dv/6OLc/+bh2v/d2tb/wcfP/7G7zf+wuMz/wcXQ/8jL0f/Fx83/w8PH/7y6
        t+S0sq0wvru5AL67uWjFwr//ycjI/8nKz//HyM//zMvP/9TR0P/b1tL/4NrU/+Hb1P/i3NX/4dzV/+Dc
        1f/i3db/5N7X/+fg2f/o4dn/5+HZ/+ji2v/p4tv/6eLb/+ni2//c2tf/x8vS/73D0P+5wc//u8PO/8fK
        zv/Oysf/vLm0rKyppAi9urYAvLm1NMTAvOvPysb/1tLP/9bS0f/Z1NL/3NfT/9/a1P/h3NX/4dzV/+Lc
        1f/i3db/497X/+Pe1v/k39f/5+HZ/+fh2f/n4dr/6OLa/+ni2v/q49v/6+Td/+ji3P/i39v/3tvZ/9rZ
        2P/d2tj/3NjT/87JxPy6trFbvLizALu4swCxrqoEwLy3n8zIw//V0c3/2NTR/9rW0f/c2NL/4NvV/+Ld
        1v/i3db/4tzV/+Ld1v/j3tf/497X/+Xf2P/n4dn/6OLa/+jh2v/o4tn/6eLa/+ji2//o4tz/6OLc/+fh
        2//m4Nr/6uPd/+Xf2f/b1tD/ysXBzbSwrBu3sq4AAAAAALq2sQC5tK81xcG96NTQzf/a1dH/2tXQ/9vX
        0v/e2dP/4dzW/+Ld2P/i3db/4t3X/+Pe2P/k3tj/5eDY/+jh2f/p4tn/6eLZ/+ji2v/o4tv/6OLb/+ni
        2//n4dr/5uDa/+bf2f/r493/5N7Z/9TPyv7Cv7pqycW/ALSwqgAAAAAAraqlAJualASyrqqfzcjE/9vW
        0f/Z1dD/3NfS/9/a1P/g29X/4t3W/+Ld1v/j39j/5d/Z/+Xf2P/l4Nn/5uHZ/+jh2f/p4dn/6OLa/+ji
        2//p4tr/6OLb/+fh2v/m4Nn/5+DZ/+ri3P/e2NL/yMO/vbKuqhe3s64AAAAAAAAAAAAAAAAAmpiWAJSS
        kSy5tLLP2NPO/9nV0P/b1tH/39rU/+Dc1f/i3dX/4t3W/+Tf2P/k4Nr/5eDZ/+Xg2f/n4dr/5+HZ/+fh
        2f/o4tv/6eLc/+ji2v/n4dn/5uHZ/+bh2f/m4Nj/5N3W/8rFvt6uqaVBsq2pAAAAAAAAAAAAAAAAAAAA
        AABubHcAtLGtAJ+dm1DHwr7p2tXP/9zWz//e2dL/4NvU/+Dc1f/h3dX/49/Y/+Tg2v/l4Nn/5uDZ/+fh
        2f/n4dn/5uHZ/+fh2v/n4dr/6OLa/+ji2v/o4tv/6OLa/+Tf1//W0MrZvLewNwAAAACJhYAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABxdXQA////AKGemmHEv7z72tXR/93X0//g29b/4NvX/+Hd1//j39j/5eDZ/+Xg
        2v/m4Nn/5+DZ/+fh2f/m4dn/5+Ha/+fh3P/m4dr/6OLb/+fi2//m4dr/3tjS/725tapbYWEGj5COAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAG5zcgCzs64AhYiGbre2sf3V0c3/3dfS/+Db1f/i3df/493Y/+Tf
        2v/k39r/5eDa/+Xg2f/m4Nn/5eDZ/+Xg2v/m4dz/5+Hd/+fh3f/n4dz/5uDc/+Hc2P/Y0s7/xsO/856e
        m4BcZGIIc3l3AAAAAAAAAAAAAAAAAAAAAAAAAAAAhYeGAH6Bfx6op6bUyMXC/9bRzf/e2df/3trY/+Hc
        2v/j3dr/5N7b/+Pe2v/k3tr/5d/Z/+bf2f/l4Nr/5N/a/+Tf2//h3Nz/2tjd/9PT3f/f29z/39rW/9bS
        zv/Tzsr/tLKw9o2PjmDv6+UAbnN0AAAAAAAAAAAAAAAAAIF7fAD///8AoKCgdr+8u/7Lx8T/2dXR/9/b
        3P/Oz9z/x8vf/8rN4P/S0+D/3trd/97Y1P/b1dHx3NfS59zX0/3c2dj/zc7b/8HG3v+6wtz/usHc/9HR
        2//e2tf/2dXQ/9XQzP/IxcP/qqqp4oqOjD2usa4Ab3NyAAAAAAAAAAAAl5eWAI+Qjze4trTjysfE/9HM
        yf/e2df/09La/8HF2/+7w9//u8Ph/8HH4f/R0t7/zMjG/7i1sX/Au7YsxsK/z9XT1v+9w9n/tb7a/7a/
        2v+4wNv/x8rb/9vY2P/c19P/19LP/9PPzP/GxMD/qKel2ZGRkEv///8AAAAAAIOGhgB1eXoOp6akrcnF
        wv/Lx8T/19LQ/9vY2v/Cxtf/vcPb/77E3v/AxeH/w8fh/9PT3f/Oysf/tbKuadPPzAC9ubWa0c7Q/7zC
        1v+zvdf/tL7Z/7jA3P/Axdz/1NLY/93X1f/b1tP/2dTQ/9XQzf/EwL7/rKuq4p6fnFh2eXgA19LTAJGS
        kXG9urf7zcjF/83Jx//b19X/zs7Y/73C2P+/xd3/wcff/8PI4P/FyN//2tfd/9HNyf+4trJkvbq2ALi1
        r3TLyMj/vsPU/7S81v+zvdf/tL7Y/7i/2P/Gx9b/2dXV/9zX1P/Y09D/2dXS/9TPzP/FwsD/sLCt7oqM
        jQB+gYMRqqqpyczJxf/JxcP/0s7N/9TS1f+9wtX/usDZ/73D3f+/xd7/w8jg/8nM3v/f2tv/zcnF8be0
        sTu2s7AAs7CsWMXDw/zAxdP/tr3X/7S+2P+0vtj/tr3X/7vA1v/Qztf/3tjW/9vV0v/a1dH/2dTQ/83J
        xv/Bv77/rKqqAKGgoVbBvbv3ycbD/8zJx//X09L/ysrV/7m+2P+7wdv/vMLc/73D3f/Bx97/0NHe/97a
        2P/KxcG+r6ynDbSxrQCyrqomxcLB4MLG0/+2v9f/tsDY/7fA2P+2vtj/t7/Y/8XJ2v/b2Nn/3tnV/9zW
        0v/c1tH/1M/L/8jEw/+cnZoVs7Guv8vGw//MyMX/1NDO/9bT1f+9wdT/usDa/7zC2/+9w9v/vsTc/8LH
        3f/W1t7/19TR/8O/u4zl4dwAsrCtAExKPAHFwr+VxMfR/7jA2P+4wdn/uMDZ/7i/2v+1vtj/ucHZ/9HR
        2//f2tn/3tjW/97Y1f/a1NH/zcrI/6uppk/Bvbr0087K/9DMyf/Y09H/zs3T/7zB1/+8wtz/vcLb/77D
        2/++xNv/wsba/9rY2v/Szsr4vLm1Tr+8uAAAAAAAwL25AL+7tjvCwsfsucDW/7jA2v+3wNr/t77Z/7S+
        2P+2v9r/xcnc/9zZ2v/e2NX/39nV/+Da1v/X09D/srCuiszHxP/W0s7/0s7L/9LPz//Aw9D/vMLY/73D
        2v++xNv/vMPa/7rD2v/Gydr/2tfX/83JxsS2tLETuri1AAAAAAC1sa4Aq6SbBb28u6a+w9H/ucHZ/7jB
        2f+4wNr/tsDa/7jA2//Cx97/1dPb/+Ha1v/i29b/5d7Y/+Da1f+5t7Sq0czJ/9XRzf/W0s7/09LU/8XK
        2f/Bx9v/wcfc/8DH3P+6w9n/uMHZ/8vN2f/W0tD7xcG+YNDMyQCzr60AAAAAAAAAAAC/vrsAu7q2S8PE
        x/DCxtf/vsTZ/7zC2v+5wtv/u8Lc/8DG3f/P0t3/4d3a/+Pe2P/k39n/4dzX/7WzsqrMyMX/1dLO/9vX
        0//Y19r/yM3d/8LI3f+/xdv/vcTb/7vC2v+9xdr/1NPY/9HMydG8ubYYv7y4AAAAAAAAAAAAAAAAAL66
        tQC7tqwEwLy5bsXFyPLHytX/vsXX/7rC2P+8wtv/wsje/9fY3//i3dv/4t3Z/+Xg3P/h3Nj/srCunMXB
        vv/X08//29fV/9rY2//Kzt3/xMrf/8HG3f++w9v/v8Tb/8vO2//Y1dT+zMfEdezm4QC4tbMAAAAAAAAA
        AAAAAAAAAAAAALm2sQC1saoEvbq3ecnHxvfMztT/xMnW/8TK2v/O0t3/39zd/+Pe2//l39z/5+Hc/9/Z
        1P+xsK03vbm229XRzP/e2dX/4d3b/9XW3f/K0N//xsvf/8XJ3v/O0dz/3Nna/8/Mycy9u7kcwL68AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALu4tgC4trMIwb26b83JxfDY1dT/2dfZ/97a2v/k39z/5N/c/+Xf
        3P/h29j/0czJ4bCajQC2srBWycXC6t/Z1f/j3tr/4d3b/9jY3P/V1t3/2Nfb/+Dc2v/a1NH1yMTAVtrU
        0ACnpqUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALe0rQCyrqYFv7u3XcvGw+Pa1ND/4dzY/+Ld
        2f/g29j/3tjV/9DKx+TBvrxlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAYAA
        AAHAAAADwAAAA+AAAAfwAAAP+AAAD/gAAAfwAAAH8AAAA+AAAAHAAIAAwACAAIAAgACAAIAAAAGAAAAB
        wAAAAcAAAAPgAAAD4AAAB/AAAAf4AIAP/AA=
</value>
  </data>
</root>